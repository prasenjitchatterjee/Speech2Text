from fastapi import FastAPI, File, UploadFile, HTTPException
from fastapi.responses import JSONResponse
import whisper
import tempfile
import os

app = FastAPI()

model = whisper.load_model("medium.en")

@app.post("/transcribe")
async def transcribe_audio(file: UploadFile = File(...)):
    if not file.filename.endswith((".mp3", ".wav", ".m4a")):
        raise HTTPException(status_code=400, detail="Unsupported file type")

    try:
        # Save uploaded file to a temp location
        with tempfile.NamedTemporaryFile(delete=False, suffix=file.filename[-4:]) as tmp:
            tmp.write(await file.read())
            tmp_path = tmp.name

        # Transcribe the audio
        result = model.transcribe(tmp_path)

        # Delete the temp file
        os.remove(tmp_path)

        return JSONResponse(content={"transcript": result["text"]})

    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))
